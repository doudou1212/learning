Resources:
  MyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: "lambda-code-hello-word"
        S3Key: "hello-world.zip"
      Handler: "index.handler"
      Role:  !GetAtt LambdaExecutionRole.Arn
      Runtime: "nodejs12.x"
      Timeout: 900
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: lambda.amazonaws.com
      Policies:
        - PolicyName: hello-world-lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - arn:aws:logs:*:*:log-group:/aws/lambda/*:*
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: MyLambda
    Properties:
      LogGroupName: hello-world-lambda-log-group
      RetentionInDays: 30
  LogFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPatter: "{ $.user = "doudou" }"
    LogGroupName: !Ref LambdaLogGroup
    MetricTransformations:
      MetricName: "special user"
      MetricValue: " $user"
